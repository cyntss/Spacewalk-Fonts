@font-face {
	font-family: 'spacewalk-icon';
	src:url('../font/spacewalk-icon.eot');
	src:url('../font/spacewalk-icon.eot?#iefix') format('embedded-opentype'),
		url('../font/spacewalk-icon.woff') format('woff'),
		url('../font/spacewalk-icon.ttf') format('truetype'),
		url('../font/spacewalk-icon.svg#spacewalk-icon') format('svg');
	font-weight: normal;
	font-style: normal;
}

/* Use the following CSS code if you want to use data attributes for inserting your icons */
[data-icon]:before {
	font-family: 'spacewalk-icon';
	content: attr(data-icon);
	speak: none;
	font-weight: normal;
	font-variant: normal;
	text-transform: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

/* Use the following CSS code if you want to have a class per icon */
/*
Instead of a list of all class selectors,
you can use the generic selector below, but it's slower:
[class*="spacewalk-icon-"] {
*/
.spacewalk-icon-virtual-host, .spacewalk-icon-virtual-guest, .spacewalk-icon-manage-autoinstallations, .spacewalk-icon-locked-system, .spacewalk-icon-inactive-systems, .spacewalk-icon-unknown-system, .spacewalk-icon-health, .spacewalk-icon-Unentitled, .spacewalk-icon-system-groups, .spacewalk-icon-health-unknown, .spacewalk-icon-software-crashes, .spacewalk-icon-health-pending, .spacewalk-icon-enhancement, .spacewalk-icon-software-channels, .spacewalk-icon-Software-Channel-Management, .spacewalk-icon-download-csv, .spacewalk-icon-custom-system-info, .spacewalk-icon-register-system, .spacewalk-icon-patches, .spacewalk-icon-configure-suse-manager, .spacewalk-icon-autoinstalling, .spacewalk-icon-clone-patches, .spacewalk-icon-autoinstallations, .spacewalk-icon-organization-trust, .spacewalk-icon-package-search, .spacewalk-icon-packages, .spacewalk-icon-monitoring-status, .spacewalk-icon-manage-software-packages, .spacewalk-icon-manage-patches, .spacewalk-icon-manage-entitlements-subscriptions, .spacewalk-icon-manage-configuration-files {
	font-family: 'spacewalk-icon';
	speak: none;
	font-style: normal;
	font-weight: normal;
	font-variant: normal;
	text-transform: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
}
.spacewalk-icon-virtual-host:before {
	content: "\e000";
}
.spacewalk-icon-virtual-guest:before {
	content: "\e001";
}
.spacewalk-icon-manage-autoinstallations:before {
	content: "\e002";
}
.spacewalk-icon-locked-system:before {
	content: "\e003";
}
.spacewalk-icon-inactive-systems:before {
	content: "\e004";
}
.spacewalk-icon-unknown-system:before {
	content: "\e005";
}
.spacewalk-icon-health:before {
	content: "\e006";
}
.spacewalk-icon-Unentitled:before {
	content: "\e007";
}
.spacewalk-icon-system-groups:before {
	content: "\e008";
}
.spacewalk-icon-health-unknown:before {
	content: "\e009";
}
.spacewalk-icon-software-crashes:before {
	content: "\e00a";
}
.spacewalk-icon-health-pending:before {
	content: "\e00b";
}
.spacewalk-icon-enhancement:before {
	content: "\e00c";
}
.spacewalk-icon-software-channels:before {
	content: "\e00d";
}
.spacewalk-icon-Software-Channel-Management:before {
	content: "\e00e";
}
.spacewalk-icon-download-csv:before {
	content: "\e00f";
}
.spacewalk-icon-custom-system-info:before {
	content: "\e010";
}
.spacewalk-icon-register-system:before {
	content: "\e011";
}
.spacewalk-icon-patches:before {
	content: "\e012";
}
.spacewalk-icon-configure-suse-manager:before {
	content: "\e013";
}
.spacewalk-icon-autoinstalling:before {
	content: "\e014";
}
.spacewalk-icon-clone-patches:before {
	content: "\e015";
}
.spacewalk-icon-autoinstallations:before {
	content: "\e017";
}
.spacewalk-icon-organization-trust:before {
	content: "\e018";
}
.spacewalk-icon-package-search:before {
	content: "\e016";
}
.spacewalk-icon-packages:before {
	content: "\e019";
}
.spacewalk-icon-monitoring-status:before {
	content: "\e01a";
}
.spacewalk-icon-manage-software-packages:before {
	content: "\e01b";
}
.spacewalk-icon-manage-patches:before {
	content: "\e01c";
}
.spacewalk-icon-manage-entitlements-subscriptions:before {
	content: "\e01d";
}
.spacewalk-icon-manage-configuration-files:before {
	content: "\e01e";
}
